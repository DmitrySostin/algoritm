# При изменении количества итераций функции время остается практичеки не изменно
# О(n)  что в случае с 10 элементами массива что со 100 а так-же 1000 элементов
# результат один и тотже при выполнении данного алгаритма
# среднее время выполения алгоритма составляет 1,4 секунды

import timeit

def search_arr(arr, key):
    for i in range(0, len(arr)):
        if arr[i] == key: return i
    return -1

s = """def err_def():
    arr_ten = [136, 142, 425, 60, 111, 152, 174, 92, 210, 89]
    arr_hundred = [11, 98, 351, 193, 238, 111, 263, 105, 367, 292, 74, 257, 67, 320, 344, 420, 89, 377, 293, 59, 325, 402,
               39, 143, 358, 271, 30, 359, 73, 474, 116, 178, 482, 34, 476, 201, 490, 191, 101, 163, 159, 455, 236, 296,
               206, 202, 21, 464, 218, 114, 118, 486, 344, 450, 71, 458, 257, 368, 98, 124, 164, 174, 266, 7, 203, 318,
               43, 338, 278, 89, 69, 287, 8, 256, 460, 181, 125, 496, 452, 380, 326, 357, 137, 157, 14, 382, 116, 179,
               131, 445, 220, 112, 388, 117, 10, 261, 285, 492, 298, 440, 451]

    print(search_arr(arr_ten, 451))"""
print(timeit.timeit(stmt=s, number=100))